//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DDNHRIS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HRISDBEntities : DbContext
    {
        public HRISDBEntities()
            : base("name=HRISDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tApplicant> tApplicants { get; set; }
        public virtual DbSet<tApplicantEducation> tApplicantEducations { get; set; }
        public virtual DbSet<tApplicantFile> tApplicantFiles { get; set; }
        public virtual DbSet<tApplicantProfile> tApplicantProfiles { get; set; }
        public virtual DbSet<tApplicantTraining> tApplicantTrainings { get; set; }
        public virtual DbSet<tOrgDepartment> tOrgDepartments { get; set; }
        public virtual DbSet<tRSPApplication> tRSPApplications { get; set; }
        public virtual DbSet<tRSPPosition> tRSPPositions { get; set; }
        public virtual DbSet<tRSPPositionJobDesc> tRSPPositionJobDescs { get; set; }
        public virtual DbSet<tRSPPublicationItem> tRSPPublicationItems { get; set; }
        public virtual DbSet<vRSPEmployee> vRSPEmployees { get; set; }
        public virtual DbSet<vRSPEmployeeList> vRSPEmployeeLists { get; set; }
        public virtual DbSet<vRSPPositionJobDesc> vRSPPositionJobDescs { get; set; }
        public virtual DbSet<vRSPPositionJobDescSub> vRSPPositionJobDescSubs { get; set; }
        public virtual DbSet<vRSPPositionQ> vRSPPositionQS { get; set; }
        public virtual DbSet<vRSPPublicationItem> vRSPPublicationItems { get; set; }
        public virtual DbSet<vSysMenu> vSysMenus { get; set; }
        public virtual DbSet<vSysMenuUser> vSysMenuUsers { get; set; }
        public virtual DbSet<vSysRoleMenu> vSysRoleMenus { get; set; }
        public virtual DbSet<vSysUserRole> vSysUserRoles { get; set; }
        public virtual DbSet<tRSPApplicationAssessment> tRSPApplicationAssessments { get; set; }
        public virtual DbSet<tRSPPSBRating> tRSPPSBRatings { get; set; }
        public virtual DbSet<vRSPApplication> vRSPApplications { get; set; }
        public virtual DbSet<tRSPApplicationProfileExpr> tRSPApplicationProfileExprs { get; set; }
        public virtual DbSet<tRSPPositionJobDescSub> tRSPPositionJobDescSubs { get; set; }
        public virtual DbSet<tRSPPSBPanel> tRSPPSBPanels { get; set; }
        public virtual DbSet<tApplicantEligibility> tApplicantEligibilities { get; set; }
        public virtual DbSet<tRSPEligibility> tRSPEligibilities { get; set; }
    
        [DbFunction("HRISDBEntities", "fnGetStepIncInYear")]
        public virtual IQueryable<fnGetStepIncInYear_Result> fnGetStepIncInYear(Nullable<System.DateTime> stepDate)
        {
            var stepDateParameter = stepDate.HasValue ?
                new ObjectParameter("stepDate", stepDate) :
                new ObjectParameter("stepDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetStepIncInYear_Result>("[HRISDBEntities].[fnGetStepIncInYear](@stepDate)", stepDateParameter);
        }
    
        [DbFunction("HRISDBEntities", "fnStepNextYear")]
        public virtual IQueryable<fnStepNextYear_Result> fnStepNextYear(Nullable<System.DateTime> stepDate)
        {
            var stepDateParameter = stepDate.HasValue ?
                new ObjectParameter("stepDate", stepDate) :
                new ObjectParameter("stepDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnStepNextYear_Result>("[HRISDBEntities].[fnStepNextYear](@stepDate)", stepDateParameter);
        }
    
        public virtual int sp_MigrateBPNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MigrateBPNo");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAppointmentDeleteNP(string appointmentCode)
        {
            var appointmentCodeParameter = appointmentCode != null ?
                new ObjectParameter("appointmentCode", appointmentCode) :
                new ObjectParameter("appointmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppointmentDeleteNP", appointmentCodeParameter);
        }
    
        public virtual int spAppointmentPosting(string transCode, string appointmentCode, Nullable<System.DateTime> effectiveDate, Nullable<int> tag, string userEIC)
        {
            var transCodeParameter = transCode != null ?
                new ObjectParameter("transCode", transCode) :
                new ObjectParameter("transCode", typeof(string));
    
            var appointmentCodeParameter = appointmentCode != null ?
                new ObjectParameter("appointmentCode", appointmentCode) :
                new ObjectParameter("appointmentCode", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("effectiveDate", effectiveDate) :
                new ObjectParameter("effectiveDate", typeof(System.DateTime));
    
            var tagParameter = tag.HasValue ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(int));
    
            var userEICParameter = userEIC != null ?
                new ObjectParameter("userEIC", userEIC) :
                new ObjectParameter("userEIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppointmentPosting", transCodeParameter, appointmentCodeParameter, effectiveDateParameter, tagParameter, userEICParameter);
        }
    
        public virtual int spAppointmentPostingCasual(string appointmentItemCode, Nullable<System.DateTime> assumptionDate, string userEIC, Nullable<decimal> annual, Nullable<decimal> totalPS)
        {
            var appointmentItemCodeParameter = appointmentItemCode != null ?
                new ObjectParameter("appointmentItemCode", appointmentItemCode) :
                new ObjectParameter("appointmentItemCode", typeof(string));
    
            var assumptionDateParameter = assumptionDate.HasValue ?
                new ObjectParameter("assumptionDate", assumptionDate) :
                new ObjectParameter("assumptionDate", typeof(System.DateTime));
    
            var userEICParameter = userEIC != null ?
                new ObjectParameter("userEIC", userEIC) :
                new ObjectParameter("userEIC", typeof(string));
    
            var annualParameter = annual.HasValue ?
                new ObjectParameter("annual", annual) :
                new ObjectParameter("annual", typeof(decimal));
    
            var totalPSParameter = totalPS.HasValue ?
                new ObjectParameter("totalPS", totalPS) :
                new ObjectParameter("totalPS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppointmentPostingCasual", appointmentItemCodeParameter, assumptionDateParameter, userEICParameter, annualParameter, totalPSParameter);
        }
    
        public virtual int spAppointmentPostingNP(string appointmentItemCode, Nullable<System.DateTime> assumptionDate, string workCode, string userEIC)
        {
            var appointmentItemCodeParameter = appointmentItemCode != null ?
                new ObjectParameter("appointmentItemCode", appointmentItemCode) :
                new ObjectParameter("appointmentItemCode", typeof(string));
    
            var assumptionDateParameter = assumptionDate.HasValue ?
                new ObjectParameter("assumptionDate", assumptionDate) :
                new ObjectParameter("assumptionDate", typeof(System.DateTime));
    
            var workCodeParameter = workCode != null ?
                new ObjectParameter("workCode", workCode) :
                new ObjectParameter("workCode", typeof(string));
    
            var userEICParameter = userEIC != null ?
                new ObjectParameter("userEIC", userEIC) :
                new ObjectParameter("userEIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppointmentPostingNP", appointmentItemCodeParameter, assumptionDateParameter, workCodeParameter, userEICParameter);
        }
    
        public virtual int spApptPostingNONPlantilla(string appointmentItemCode, Nullable<System.DateTime> assumptionDate, string userEIC)
        {
            var appointmentItemCodeParameter = appointmentItemCode != null ?
                new ObjectParameter("appointmentItemCode", appointmentItemCode) :
                new ObjectParameter("appointmentItemCode", typeof(string));
    
            var assumptionDateParameter = assumptionDate.HasValue ?
                new ObjectParameter("assumptionDate", assumptionDate) :
                new ObjectParameter("assumptionDate", typeof(System.DateTime));
    
            var userEICParameter = userEIC != null ?
                new ObjectParameter("userEIC", userEIC) :
                new ObjectParameter("userEIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spApptPostingNONPlantilla", appointmentItemCodeParameter, assumptionDateParameter, userEICParameter);
        }
    
        public virtual int spLNDRespRatingCalQ(string respondentCode)
        {
            var respondentCodeParameter = respondentCode != null ?
                new ObjectParameter("respondentCode", respondentCode) :
                new ObjectParameter("respondentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLNDRespRatingCalQ", respondentCodeParameter);
        }
    
        public virtual int spLNDRespRatingCalQRemarks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLNDRespRatingCalQRemarks");
        }
    
        public virtual int spNOSA(string nOSACode, string userEIC)
        {
            var nOSACodeParameter = nOSACode != null ?
                new ObjectParameter("NOSACode", nOSACode) :
                new ObjectParameter("NOSACode", typeof(string));
    
            var userEICParameter = userEIC != null ?
                new ObjectParameter("userEIC", userEIC) :
                new ObjectParameter("userEIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNOSA", nOSACodeParameter, userEICParameter);
        }
    
        public virtual int spNOSAPosting(string nOSACode)
        {
            var nOSACodeParameter = nOSACode != null ?
                new ObjectParameter("NOSACode", nOSACode) :
                new ObjectParameter("NOSACode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNOSAPosting", nOSACodeParameter);
        }
    
        public virtual int spNOSI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNOSI");
        }
    
        public virtual int spNOSIPosting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNOSIPosting");
        }
    
        public virtual ObjectResult<spPSBApplicantProfile_Result> spPSBApplicantProfile(string applicationCode)
        {
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("applicationCode", applicationCode) :
                new ObjectParameter("applicationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPSBApplicantProfile_Result>("spPSBApplicantProfile", applicationCodeParameter);
        }
    
        public virtual int spReGenItemNo(string functionCode, Nullable<int> startItemNo)
        {
            var functionCodeParameter = functionCode != null ?
                new ObjectParameter("functionCode", functionCode) :
                new ObjectParameter("functionCode", typeof(string));
    
            var startItemNoParameter = startItemNo.HasValue ?
                new ObjectParameter("startItemNo", startItemNo) :
                new ObjectParameter("startItemNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReGenItemNo", functionCodeParameter, startItemNoParameter);
        }
    
        public virtual int spRePostPlantillaPosition()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRePostPlantillaPosition");
        }
    
        public virtual int spUpdateQS2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateQS2");
        }
    
        public virtual int spAppointmentPostingNonPlan(string appointmentItemCode, Nullable<System.DateTime> assumptionDate, string workCode, string userEIC)
        {
            var appointmentItemCodeParameter = appointmentItemCode != null ?
                new ObjectParameter("appointmentItemCode", appointmentItemCode) :
                new ObjectParameter("appointmentItemCode", typeof(string));
    
            var assumptionDateParameter = assumptionDate.HasValue ?
                new ObjectParameter("assumptionDate", assumptionDate) :
                new ObjectParameter("assumptionDate", typeof(System.DateTime));
    
            var workCodeParameter = workCode != null ?
                new ObjectParameter("workCode", workCode) :
                new ObjectParameter("workCode", typeof(string));
    
            var userEICParameter = userEIC != null ?
                new ObjectParameter("userEIC", userEIC) :
                new ObjectParameter("userEIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAppointmentPostingNonPlan", appointmentItemCodeParameter, assumptionDateParameter, workCodeParameter, userEICParameter);
        }
    }
}
